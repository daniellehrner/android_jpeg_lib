apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "me.lehrner.prebuilt_jpeg_lib"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        sourceSets.main {
            // Tell Gradle where to put the compiled library
            jniLibs.srcDir 'src/main/libs'
            // hide the ‘jni’ folder so that the automatic gradle build doesn’t try to run
            // it’s own ndk-build process
            jni.srcDirs = [];
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Tell Gradle to run the ndkBuild task when compiling
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }

    // This task utilizes the Android.mk file defined in src/main/jni
    // ndk_build_path is hard coded in gradle.properties
    task ndkBuild(type: Exec) {
        commandLine getNdkBuildPath(), '-C', file('src/main/jni').absolutePath
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.1'
}

def getNdkBuildPath() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def ndkDir = properties.getProperty('ndk.dir', null)
    if (ndkDir == null) {
        throw new GradleException("Module location not found. Define location with ndk.dir in the local.properties file!")
    }
    return ndkDir + "/ndk-build"
}